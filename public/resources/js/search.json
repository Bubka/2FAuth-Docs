[[{"l":"Welcome to 2FAuth Docs","p":["2FAuth is a web based self-hosted alternative to One Time Passcode (OTP) generators like Google Authenticator, designed for both mobile and desktop.","Screenshots of 2FAuth on mobile"]},{"l":"Why 2FAuth","p":["Two-Factor Authentication has become very popular in recent years, resulting in more and more situations where we face a security code request and an increase in the number of accounts protected by this technology. In other words, 2FA is now inevitable and critical.","2FAuth's purpose is to simplify how you use and manage your 2FA with a clean and suitable interface, no matter what device you use. In front of your computer without your smartphone and dealing with a code request? No problemo, just open your 2FAuth instance in a browser tab and voilÃ !","Moreover, as an open source and self-hosted application, it lets you regain control over your personal security data, giving you privacy and the ability to back it up (Have you lost a smartphone with all your 2FA accounts inside Google Auth? I did... it really sucked)"]},{"l":"Features"},{"l":"Generate passwords","p":["The main purpose of 2FAuth: Serve you some fresh TOTP/HOTP security codes aka One-Time Passwords."]},{"l":"Work anywhere","p":["It's a Web App, it just works, whatever device you're on. You only need one device (not even yours) and an Internet connection."]},{"l":"QR codes scan","p":["Scan and decode QR codes to add a 2FA account in no time. Actually, it decodes any QR code, even non 2FA."]},{"l":"2FA management","p":["Manage your 2FA accounts, organize and classify them using Groups, edit & delete them. You can even manually add an account without scanning a QR code."]},{"l":"Protect your data","p":["2FAuth protects your data with Privacy, Self-hosting, WebAuthn authentication, OTP obfuscation, and Auto lock."]},{"l":"REST API","p":["2FAuth provides a REST API which lets you perform most of its functionalities from any external application. Have a look at the API documentation to find out how to use it."]},{"l":"Demo website","p":["Want to try 2FAuth? A demo is available at https://demo.2fauth.app","You can connect using the email address demo@2fauth.app and the password demo. The demo is reset every hour."]}],[{"l":"Self-hosted server","p":["You can deploy 2FAuth on your own web server, whether on your local computer or a web host. The following guide describes how to proceed and gives basic configurations for both NGINX and Apache2 web servers."]},{"l":"Requirements"},{"l":"HTTP server","p":["Apache and NGINX are the most popular web servers. If you rent a server or web hosting, you probably already have one of them installed. If you plan to use your own machine and need help installing and configuring a web server, please consider searching the Web, as there are many tutorials to guide you through.","Google search for install apache2","Google search for install nginx"]},{"l":"PHP","p":["PHP >= 7.4","BCMath PHP Extension","Ctype PHP Extension","Fileinfo PHP Extension","JSON PHP Extension","Mbstring PHP Extension","OpenSSL PHP Extension","PDO PHP Extension","Tokenizer PHP Extension","XML PHP Extension","Depending on the chosen database (see below), don't forget to install the corresponding PHP extension (i.e php7.3-sqlite3 or php7.3-mysql)"]},{"l":"Database","p":["You need a database to run 2FAuth. Supported databases are the ones supported by Laravel.","MariaDB 10.2+","MySQL 5.7+","PostgreSQL 9.6+","SQLite 3.8.8+","SQL Server 2017+","2FAuth is a very light application with minimal needs and no concurrent connections, so SQLite is probably the best choice."]},{"l":"Composer","p":["You need Composer to install all PHP dependencies of 2FAuth. As the installation process of Composer may change depending on your operating system, please follow the instructions provided on the official website:","Install Composer","You can test your installation by running php composer.phar -v in a terminal (or just composer -v if composer has been installed in a directory that is part of your system PATH)"]},{"l":"Server configuration","p":["We will use /var/www/2fauth which is a common path in the * nix world. Of course, you are free to use another path, just remember to adapt the following configurations and commands with yours.","Set your NGINX configuration in /etc/nginx/nginx.conf as :","You can verify the Nginx configuration is valid with:","Add a new virtual host:","Add the following to the newly created file:","Remember to replace example.com with your domain","Save and close the file, then enable the new VHost and restart Apache2:"]},{"l":"Set up 2FAuth"},{"l":"Get the source code","p":["As a reminder, the installation path for this guide is /var/www/2fauth. The given commands should be modified if you are using another path.","Download the source code of the latest 2FAuth release","Extract the archive to a temp folder","Open the top folder named temp/2fauth-x.y.z","Move its content to /var/www/2fauth"]},{"l":"Install composer dependencies","p":["From the /var/www/2fauth/ directory:","Or if you didn't add composer to your system PATH:"]},{"l":"Create the database","p":["Use the CLI of the chosen database to create a new database with one of the following commands:","Reference","Command Line Shell For SQLite","Creating database with MySQL Creating database with MariaDB","Creating database with MariaDB","If you are not comfortable with the command line, you may use a db management tool like Adminer to ease this step.","Get Adminer"]},{"l":"Set the .env file","p":["Run the following command from the /var/www/2fauth directory to create a fresh .env file from the .env.example template:","Open the .env file with a text editor, you will find all environment variables that could be customized. You won't have to set/change all, most of them have a default value that will probably fit your needs. But the database and email parts have to be reviewed."]},{"i":"database-1","l":"Database","p":["Set the path to your SQLite database file:","Uncomment the dedicated lines (and comment the SQLite ones) and replace values with yours:"]},{"l":"Email","p":["Email configuration depends on your email provider. You should refer to its documentation to find the relevant values. As an example, here is the configuration for an OVH hosting:"]},{"l":"Run Artisan commands","p":["Run the following Artisan commands from the /var/www/2fauth/ directory to set up the Laravel part:"]},{"l":"Set ownership and permissions","p":["From the /var/www/ directory :"]}],[{"l":"Docker CLI","p":["An official Docker image is available to run 2FAuth in a single Docker container. These are the Docker CLI Setup instructions, a docker-compose.yml file is also available."]},{"l":"Features","p":["Compatible with: amd64, 386, arm64, arm/v6 and arm/v7","Stores data in a Sqlite database file","Runs without root as user with id 1000 and group id 1000"]},{"l":"Tags","p":["Several Docker tags are available to let you choose which version you want to run:","Description","latest","The current state of the master branch. Considered stable. May include some fixes/changes not yet officially released.","Release tags: 3.0.2 3.1.0... x.y.z","The version at a corresponding GitHub release. Considered stable, and frozen.","dev","The current state of the dev branch May be unstable or even broken.","Simply append the tag name to the docker image name in your command or script, separated by a colon, to specify which tag to use. e.g 2fauth/2fauth:3.0.2, or 2fauth/2fauth:dev.","If no tag is specified, Docker will default to latest."]},{"l":"Docker CLI Setup","p":["We assume your current directory is /yourpath.","Create a directory on your host","Since the container runs without root as user 1000:1000, you need to fix the ownership and permissions of that directory:","If you feel like using another ID, you can build the image with build arguments.","Run the container interactively","Access it in your browser","localhost:8000","You can stop it with CTRL+C.","You can also run it in the background by replacing -it --rm with -d.","You can set available environment variables (see the .env.example) with -e, for example -e APP_NAME=2FAuth."]},{"l":"Use an existing SQLite file","p":["If you already have an SQLite file, move it to /yourpath/2fauth/database.sqlite on your host before starting the container. Don't forget to fix its ownership and permissions if you run on * nix:","The container will automatically pick it up."]},{"l":"Build the image","p":["You can build the image from the master branch with docker and git using:"]},{"l":"Build the image for a specific release","p":["You can build a specific release by appending the release tag with #release-tag to the command. For example:"]},{"l":"Build the image for a specific commit","p":["You can build a specific commit (see master's commits) by appending the commit hash with #commit-hash to the command. For example:"]},{"l":"Build the image with build arguments","p":["1000","2.1","7.3-buster","an unknown date","Build argument","buster-slim","COMMIT","COMPOSER_VERSION","CREATED","DEBIAN_VERSION","Default","Description","GID","PHP_VERSION","SUPERVISORD_VERSION","The commit hash of the Git commit used","The date of the image build time","The Debian version to use","The GID of the user to run the container as","The PHP version to use to get composer dependencies","The UID of the user to run the container as","The version of composer to use","The version of supervisord to use","The version of the image","UID","unknown","Use the following build arguments to customize the image with --build-arg key=value:","v0.7.3","VERSION"]},{"l":"Mail settings","p":["2525","Build argument","changeme@example.com","Default","Description","Example:","MAIL_FROM","MAIL_HOST","MAIL_PASSWORD","MAIL_PORT","MAIL_USERNAME","null","smtp.mailtrap.io","The corresponding SMTP port","The sender address","The SMTP hostname","The SMTP password","The SMTP username"]},{"l":"Implementation details","p":["The final Docker image is based on alpine:3.14 with minimal packages installed","The container runs supervisord to handle both an Nginx server and a PHP-FPM server together","The /srv directory holds the repository data and PHP code.","The /2fauth directory is targeted for the container end users.","By default, the container logs the Nginx logs and the PHP-FPM logs. The application logs (if any) can be found in /2fauth/storage/logs."]}],[{"l":"Docker compose"},{"l":"Docker Compose","p":["docker-compose.yml from the 2FAuth Repository"]}],[{"l":"Heroku","p":["You can deploy 2FAuth to Heroku by clicking the button below:"]},{"l":"Restrictions","p":["Heroku uses an ephemeral filesystem, which means 2FAuth cannot use this file system to store and retrieve the 2FA icons across multiple sessions. For now, the only workaround is to disable icon display in 2FAuth:","Uncheck the option in the 2FAuth's Settings > Options section"]},{"l":"Configuration","p":["Although the Heroku button tends to ease the installation process, you have to configure some environment variables when creating the apps at Heroku."]},{"l":"Security keys","p":["2FAuth needs an RSA key pair for Laravel Passport to generate security tokens. Normally, these keys are generated automatically and stored in a 2FAuth subfolder, but the Heroku ephemeral filesystem breaks this behavior. You have to generate the keys on your own and then set the corresponding env vars."]},{"l":"Generate RSA keys","p":["Run the following command to generate a private private.pem RSA key:","Then derivates a public key public.pem from the newly created private.pem key:","Despite this is not a good security practice, you can also use an online generator like https://cryptotools.net/rsagen"]},{"l":"Set Heroku env vars","p":["Set the PASSPORT_PRIVATE_KEY environment var with the content of the private.pem file. Set the PASSPORT_PUBLIC_KEY environment var with the content of the public.pem file.","They should look like this:","Do NOT use those keys, they are provided as an example"]},{"l":"Email","p":["When using the Deploy to Heroku button, you will be prompted to set email vars for a basic SMTP configuration. It will be appropriate most of the time, but this is not the only possible configuration supported by Laravel.","Email setup is only needed for the 2FAuth 'Recover your password' feature. You can skip it if you just want to try 2FAuth.","The Email configuration depends on your email provider. You should refer to its documentation to find the relevant values. As an example, here is the configuration for an OVH hosting using SSL:","Read more about email configuration at https://laravel.com/docs/mail."]},{"l":"Free resources","p":["2FAuth offers a basic Heroku setup which only uses free resources: A single add-ons, Heroku Postgres with Hobby plan, and a single Web Dyno with NGINX. This way, any Heroku user can deploy the app, even if the user account is not verified.","Be aware that the Postgres has some limitations, but that should not be a problem as 2FAuth has very few database needs. Read more about the Heroku Postgres plans at devcenter.heroku.com"]}],[{"l":"Upgrade"},{"l":"Self-hosted server","p":["Update the source code in /var/www/2fauth(see Get the source code)","Do not change the /var/www/2fauth/storage directory nor your /var/www/2fauth/database/database.sqlite file (when using SQLite)","Then run the following commands:"]},{"l":"Docker","p":["At the very least, backup your database.sqlite file to avoid bad surprises!","The Docker image 2fauth/2fauth is built on every commit pushed to the master branch. You can therefore pull the image with docker pull 2fauth/2fauth and restart the container to update it.","You can also use tagged images, see Docker Hub tags, which are produced on Github releases."]}],[{"l":"Authentication","p":["2FAuth has been designed for personal use only, it is single user oriented. You have to create a user account to use the app, and more than one user account cannot be created. None of the app's features can be used unless you have been authenticated with one of the following methods."]},{"l":"Built-in","p":["Authentication is done by submitting your credentials, an email and a password, to the 2FAuth login form. Nothing special here, it is a very common and well-known method.","This is the default authentication method."]},{"l":"WebAuthn","p":["2FAuth supports the W3C Web Authentication API aka WebAuthn ( learn more). This means you can register a security device like a Yubikey, a Titan Security Key, or a facial recognition system like Apple FaceId and use it to log into 2FAuth.","image by Arun (dribbble.com/nullpointone)","This method is considered more secure, as it proves you are in fact you because you have to physically own the security device.","WebAuthn is available in 2FAuth as a complement or a replacement to the built-in login/password method. Consider using only WebAuthn to provide the highest protection to your 2FAuth instance.","The WebAuthn flow does not use login & password, but the creation of a user account with an email and a password remains mandatory."]},{"l":"Registering a security device","p":["2FAuth offers to register a WebAuthn device right after submitting the user registration form or through its Settings > Webauthn section. Whatever you choose, the registration process will be the same and depends on the hardware you use (desktop, laptop or smartphone) and how your browser implements the WebAuthn flow.","A typical workflow would be:","You click the link in 2FAuth","Your browser prompts you to grant the operation","You put your finger on the key's touch button","2FAuth registers the key and offers you to rename it","You can register several security devices, there is no limitation in the number of devices."]},{"l":"Revoking a security device","p":["You can revoke any registered security device through the Settings > Webauthn section. Simply click the relevant button.","The revocation of a device is permanent and cannot be undone."]},{"l":"I lost my device","p":["Don't worry, there is always a solution, depending on how you have configured 2FAuth's WebAuthn options.","If you have registered another device and still own it, just use this device to log in. Otherwise, you can recover your account by registering a new security device.","Click the Recover your account link of the 2FAuth's login form, this will send a link to your registered email address. Follow this link, you will be able to register a new device and revoke all existing ones.","Assuming you haven't lost your password too, switch the 2FAuth login form using the link Sign in using login & password and log in using your email address and password. It's that simple!","Don't forget to revoke the lost device in the Settings > Webauthn section."]},{"l":"User verification","p":["Most authenticators and smartphones will ask the user to actively verify themselves to log in. For example, through a touch plus pin code, password entry, or biometric recognition (e.g., presenting a fingerprint). The intent is to distinguish one user from any other.","You can configure how the user verification step behave during the WebAuthn login flow with the WEBAUTHN_USER_VERIFICATION env var:","Supported value","Behavior","required","Will ALWAYS ask for user verification","preferred(default)","Will ask for user verification IF POSSIBLE","discouraged","Will NOT ask for user verification (for example, to minimize disruption to the user interaction flow)"]},{"l":"Personal Access Token","p":["Use Personal Access Tokens (PAT) to authenticate requests sent to the 2FAuth REST API.","How to authenticate API requests"]},{"l":"Authentication proxy","p":["You can configure 2FAuth to let an HTTP proxy handle authentication. In this case, 2FAuth will consider you logged in as long as you are authenticated at proxy level. This is particularly useful if you want to deploy 2FAuth behind a service like Sandstorm or behind an Auth server like Authelia.","2FAuth will check for an HTTP header, named REMOTE_USER by default, in every request from the proxy. (see RFC3875)","2FAuth only check for the header presence, nor its validity nor its content, so be sure your instance cannot be reached otherwise than through your auth proxy."]},{"l":"Enable the proxy guard","p":["Set the AUTHENTICATION_GUARD environment variable to reverse-proxy-guard.","WebAuthn and Personal Access Token are not supported when using the reverse-proxy-guard"]},{"l":"Customize the header name","p":["You can customize the header name by setting the AUTH_PROXY_HEADER_FOR_USER environment variable to match a specific proxy configuration. For example, if the proxy header is 2FAUTH-User, then set AUTH_PROXY_HEADER_FOR_USER to HTTP_2FAUTH_USER."]},{"l":"Additional header","p":["You can configure 2FAuth to check for an additional header that contain the authenticated user email address. This header may or may not exist depending on the auth proxy configuration. The environment variable to set for that is AUTH_PROXY_HEADER_FOR_EMAIL.","For now, 2FAuth does not use this information, but a future feature could use it to send you emails."]}],[{"l":"Data protection","p":["2FAuth provides several security mechanisms to protect your sensitive 2FA data."]},{"l":"DB encryption","p":["Sensitive data stored in the database (2FA secret & otpauth URI) can be encrypted to protect them against a database compromise.","Check the option in the 2FAuth's Settings > Options section to enable encryption.","It is strongly recommended to backup the APP_KEY value defined in your .env file (or the whole file) when encryption is enabled.","There is no way to generate One-Time Password if you lose this key. There is no workaround in case of key loss."]},{"l":"Auto lock","p":["2FAuth can automatically log you out to keep your data always protected. The goal is to avoid a long life session that someone could reuse, for example from a public computer you forgot to clean or from your own stolen smartphone.","Supported trigger","Behavior","On security code copy","You will be logged out immediately after you click/tap on a One-Time Password to copy it","a time lapse","You will be logged out after a certain amount of time","Never","Disable the Auto lock","Use the combobox in the 2FAuth's Settings > Options section to select a trigger or to disable the feature."]},{"l":"Sensitive data hiding","p":["You can configure 2FAuth to display obfuscated One-Time Password rather than human readable password.","Without obfuscation","With obfuscation","377 609","âââ âââ","This protects against attacks like a shoulder-surfing attack, where a third party intercepts your password by watching over your shoulder as you generate a fresh password.","Of course, this is only suitable if you are able to use the copy/paste feature to provide the password to the destination service.","Simply click/tap the (obfuscated) password in 2FAuth to copy it!","Check the option in the 2FAuth's Settings > Options section to enable obfuscation."]}],[{"l":"API","p":["2FAuth is built on top of its own REST API (following OpenAPI 3.1 specification), which can be used to make any other app communicate with 2FAuth.","Description","groups","icons","Images used to illustrate 2FA accounts in 2FAuth","one-time password","qrcode","Resource","settings","The 2FA accounts stored in 2FAuth which you need to generate One-Time Passwords (OTP)","The 2FAuth user settings, which can be extended with custom settings","The API provides endpoints to manage most of the 2FAuth resources:","The groups used to organize 2FA accounts in 2FAuth","The One-Time Passwords (TOTP or HOTP) generated on demand","Two-dimensional barcode used to encode/share 2FA accounts","twofaccounts"]},{"l":"Authentication","p":["You authenticate in the 2FAuth API with a Personal Access Token(PAT) built upon the OAUTH Bearer authentication scheme (see RFC 6750). That means the PAT has to be passed via the HTTP Authorization header in every request made to the API.","As 2FAuth is designed to be used by a single user, the PAT grants access to all resources without restriction; there is no scope defined. A PAT is valid until you decide to revoke it."]},{"l":"Creating an access token","p":["Open the 2FAuth Settings > OAUTH section and click the link to generate a new token.","A PAT (in green) right after its creation","The token will only be shown once, right after its creation, so copy it immediately because you won't be able to display it again."]},{"l":"Revoking a token","p":["You can revoke a personal access token by simply clicking its button in the Settings > OAUTH section. A request made with a revoked token will receive a 401 Unauthorized response.","The revocation of a token is permanent and cannot be undone."]},{"l":"API documentation","p":["The API has its own dedicated documentation that you can browse in a lightweight format below. You may also use the fullscreen format which provides a more comfortable layout and modern features like advanced search, mocking and more:","Fullscreen documentation"]}],[{"l":"Contributing","p":["2FAuth is an Open Source project, that means everybody can participate, in many differents ways. If Open Source is new to you, the following guide should be a good starting point:","How to Contribute to Open Source"]},{"i":"enhancement--feature-suggestion","l":"Enhancement & Feature suggestion","p":["Feel free to request some enhancements or new features. Not every request will be accepted but it can always be discussed.","Also please have a look to the 2FAuth development project, maybe your idea is already there.","2FAuth dev project on GitHub","2FAuth discussion on GitHub"]},{"l":"Development","p":["2FAuth is made with the following technologies:","PHP","Javascript","HTML/CSS","SQL* databases","If you are confortable with one of this language you are very welcome to submit some additions, modifications or fixes to the code base via a Pull Request on GitHub.","Please fork and push your changes to the 2FAuth dev branch"]},{"l":"Translation","p":["2FAuth is localized in several languages. You can contribute by correcting or completing translations in a language you speak, using the Crowdin platform.","Ask for your language if this does not yet exist.","2FAuth translations in Crowdin"]}],[{"l":"Bug reporting","p":["Found a bug? A report from you would be greatly appreciated!"]},{"l":"GitHub issues","p":["The preferred way to report a bug is to open an issue on GitHub.","GitHub eases the creation of issues by providing a template which encourage you to give as much information as possible on what's going on and the technical context.","Check the existing issues before creating a new one, maybe your issue has already been reported.","2FAuth issues on GitHub"]},{"l":"Contact","p":["You can also report your issue:","By email - contact 2fauth.app","On Twitter - @TwoFAuth"]}],[{"l":"Credits"},{"l":"Contributions","p":["2FAuth is actively developed by Bubka.","The Docker installation guide as well as the Docker stuff are a contribution of Quentin McGow."]},{"l":"Tools"},{"l":"Frameworks","p":["Laravel","Vue.js","Bulma CSS"]},{"l":"Graphics","p":["Font Awesome icon library"]},{"l":"Main dependencies"},{"l":"Composer","p":["Spomky-Labs/otphp","chillerlan/php-qrcode","khanamiryan/php-qrcode-detector-decoder"]},{"l":"npm","p":["gruhn/vue-qrcode-reader","vue-notification","vue-i18n","axios","Vue.Draggable"]},{"l":"css","p":["Wikiki/bulma-checkradio"]},{"l":"Docs generators","p":["Retype","RapiDoc"]}]]